One of the challenges of NoSQL is that it lacks a standard query language [19] [20]. There are more than 50 implementations of NoSQL, with each providing its own language and interface [8]. This has hindered the wide acceptance of NoSQL as it is difficult for developers to master all implementations of NoSQL manipulation languages. Therefore, NoSQL has fewer users than Relational Databases [10]. Another challenge of NoSQL is poor security as it is still an immature technology [21]. By design, NoSQL offers limited security because emphasis is placed on data handling. NoSQL databases can be attacked by scanning Known port numbers and the data at rest is not encrypted [17]. For NoSQL data that is in transit, SSL transport can be used but, it is not turned on by default as is the case of MongoDB [21]. NoSQL has insufficient logging capabilities making it more vulnerable to insider attacks which cannot be traced easily.



Một trong những thách thức của NoSQL là nó thiếu ngôn ngữ truy vấn chuẩn [19] [20]. Có hơn 50 cách triển khai NoSQL, với mỗi cách cung cấp ngôn ngữ và giao diện riêng [8]. Điều này đã cản trở sự chấp nhận rộng rãi của NoSQL vì các nhà phát triển khó có thể thành thạo tất cả các triển khai của các ngôn ngữ thao tác NoSQL. Do đó, NoSQL có ít người dùng hơn Cơ sở dữ liệu quan hệ(Relational Databases) [10]. Một thách thức khác của NoSQL là bảo mật kém vì nó vẫn là một công nghệ chưa trưởng thành [21]. Theo thiết kế, NoSQL cung cấp khả năng bảo mật hạn chế vì tập trung vào xử lý dữ liệu. Cơ sở dữ liệu NoSQL có thể bị tấn công bằng cách quét các số cổng đã biết và dữ liệu ở trạng thái nghỉ không được mã hóa [17]. Đối với dữ liệu NoSQL đang chuyển tiếp, truyền tải SSL có thể được sử dụng nhưng nó không được bật theo mặc định như trường hợp của MongoDB [21]. NoSQL không có đủ khả năng ghi nhật ký khiến nó dễ bị tấn công bởi các cuộc tấn công nội bộ mà không thể dễ dàng truy tìm được.

Relational Databases are easy to implement, robust, consistent and secure but, they are too rigid [18]. NoSQL performs well in handling huge volumes data, supports unstructured data but, is less consistent and unsecure. It is not possible to conclude that one database is better than the other [8]. Each database model may be chosen depending on the application to be developed. For small applications requiring strong consistency, a developer may choose Relational Databases and for large dynamic databases, a developer may choose NoSQL. In web 2.0, 3.0 and big data applications NoSQL is a better choice than Relational Databases.

Relational Databases (Cơ sở dữ liệu quan hệ) dễ triển khai, mạnh mẽ, nhất quán và an toàn nhưng chúng quá cứng nhắc [18]. NoSQL hoạt động tốt trong việc xử lý khối lượng dữ liệu khổng lồ, hỗ trợ dữ liệu phi cấu trúc nhưng kém nhất quán và không an toàn. Chúng ta không thể kết luận rằng cơ sở dữ liệu này tốt hơn cơ sở dữ liệu kia [8]. Mỗi mô hình cơ sở dữ liệu có thể được chọn tùy thuộc vào ứng dụng được phát triển. Đối với các ứng dụng nhỏ yêu cầu tính nhất quán cao, nhà phát triển có thể chọn Cơ sở dữ liệu quan hệ và đối với cơ sở dữ liệu động lớn, nhà phát triển có thể chọn NoSQL. Trong các ứng dụng web 2.0, 3.0 và dữ liệu lớn, NoSQL là lựa chọn tốt hơn so với Cơ sở dữ liệu quan hệ.